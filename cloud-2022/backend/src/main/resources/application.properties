#####################
######## DB #########
#####################
spring.datasource.url=jdbc:postgresql://uni-canteen.postgres.database.azure.com:5432/postgres
spring.datasource.username=cloud_tuke
spring.datasource.password=Heslo123tuke
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

hibernate.connection.url=jdbc:postgresql://uni-canteen.postgres.database.azure.com:5432/postgres
hibernate.connection.username=cloud_tuke
hibernate.connection.password=Heslo123tuke

#####################
#### MULTITENANCY ###
#####################
spring.jpa.properties.hibernate.multiTenancy=SCHEMA
spring.jpa.properties.hibernate.tenant_identifier_resolver=sk.tuke.unicanteen.multitenancy.TenantIdentifierResolver
spring.jpa.properties.hibernate.multi_tenant_connection_provider=sk.tuke.unicanteen.multitenancy.SchemaMultiTenantConnectionProvider

#####################
##### TENANT ID #####
#####################

tenant.tuke=91805668-f79d-4291-8f91-77f842032c20
tenant.upjs=a9fa2cf2-5d18-4d81-a51b-5966a8ba2d5a

#####################
##### JWT TOKEN #####
#####################

jwt.token.validity=48000
jwt.signing.key=secret_key123
jwt.authorities.key=roles
jwt.token.prefix=Bearer
jwt.header.string=Authorization

#####################
####### REDIS #######
#####################

# Specify the DNS URI of your Redis cache.
spring.redis.host=uni-canteen-redis.redis.cache.windows.net
# Specify the access key for your Redis cache.
spring.redis.password=q9X6wEy8ZEVtXJVmVcxZjkruLEudY04mbAzCaBdh1wk=
# Specify the port for your Redis cache.
spring.redis.port=6379